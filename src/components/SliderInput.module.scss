@use "~/style/atoms/time";
@use "~/style/atoms/interactivity";
@use "~/style/atoms/color";

.root {
  position: relative;
  display: flex;
  gap: 2rem;
  flex-direction: column;
  padding-inline: 2rem;
  padding-block: 1rem;
  padding-block-end: 2rem;
  border-radius: 2rem;
  @include time.transition;


  label {
    display: flex;
    justify-content: space-between;
    color: var(--fg-2);

    [data-vs] {
      display: none;
    }
  }

  [data-panel] {
    background: none;
    inline-size: 100%;
    position: absolute;
    inset: 0;
  }

  [data-visual] {
    display: flex;
    align-items: center;
    position: relative;

    @include time.transition;

    [data-guide] {
      position: absolute;
      inset-inline: 0;
      block-size: 0.25rem;
      background: currentColor;
    }

    [data-gutter] {
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: absolute;
      inset-inline: -0.25rem;

      div {
        inline-size: 0.5rem;
        block-size: 0.5rem;
        border-radius: 50%;
        background: currentColor;
        // transform: scale(calc(1 + 3 * var(--proximity)));
        @include time.transition;
      }
    }

    [data-handle] {
      position: absolute;
      block-size: 1.5rem;
      inline-size: 1.5rem;
      background: currentColor;
      transform: translateX(-50%);
      border-radius: 50%;
      @include time.transition;
    }

    [data-fill] {
      position: absolute;
      block-size: 100%;
      background: currentColor;
      @include time.transition;
      border-radius: inherit;
    }
  }

  input {
    inline-size: 100%;
    block-size: 100%;
    position: absolute;
    inset: 0;
    padding: 0;
    -webkit-appearance: none;
    appearance: none;
    cursor: pointer;
    border-radius: 2rem;
    opacity: 0.5;

    &::-webkit-slider-thumb,
    &::-moz-range-thumb {
      -webkit-appearance: none;
      appearance: none;
      border: none;
      background: none;
    }
  }

  &:hover,
  &:focus-within {
    @include color.props("surface-3");
    background: var(--bg);

    [data-handle] {
      block-size: 2rem;
      inline-size: 2rem;
    }

    [data-gutter] {
      div {
        transform: scale(calc(1 + 3 * var(--proximity)));
      }
    }
  }

  &[data-unset="true"] {
    color: var(--fg-3);
  }
}
